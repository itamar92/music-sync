# Music Sync App Schema

# User table is keyed by Firebase Auth UID
type User @table {
  # Firebase Auth UID is automatically set during insert and upsert
  id: String! @default(expr: "auth.uid")
  email: String! @col(dataType: "varchar(255)")
  dropboxUserId: String @col(dataType: "varchar(100)")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}

# Folder sync configuration - tracks which Dropbox folders are synced
type FolderSync @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  folderId: String! @col(dataType: "varchar(255)")
  folderPath: String! @col(dataType: "text")
  folderName: String! @col(dataType: "varchar(255)")
  displayName: String @col(dataType: "varchar(255)")
  isActive: Boolean! @default(expr: "true")
  lastSyncAt: Timestamp @default(expr: "request.time")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}

# Playlists - can be folder-based or custom
type Playlist @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  name: String! @col(dataType: "varchar(255)")
  displayName: String @col(dataType: "varchar(255)")
  folderId: String @col(dataType: "varchar(255)")
  folderPath: String @col(dataType: "text")
  type: String! @col(dataType: "varchar(20)") # 'folder' or 'custom'
  isActive: Boolean! @default(expr: "true")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}

# Individual tracks/songs
type Track @table {
  id: UUID! @default(expr: "uuidV4()")
  user: User!
  name: String! @col(dataType: "varchar(255)")
  displayName: String @col(dataType: "varchar(255)")
  artist: String! @col(dataType: "varchar(255)")
  displayArtist: String @col(dataType: "varchar(255)")
  duration: String! @col(dataType: "varchar(20)")
  durationSeconds: Int!
  filePath: String! @col(dataType: "text")
  folderId: String @col(dataType: "varchar(255)")
  playlist: Playlist
  isActive: Boolean! @default(expr: "true")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}

# Sync status tracking for individual tracks
type TrackSync @table {
  id: UUID! @default(expr: "uuidV4()")
  track: Track! @unique
  user: User!
  lastSyncedAt: Timestamp @default(expr: "request.time")
  syncStatus: String! @col(dataType: "varchar(20)") @default(expr: "'pending'") # 'pending', 'synced', 'error'
  errorMessage: String @col(dataType: "text")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp! @default(expr: "request.time")
}
