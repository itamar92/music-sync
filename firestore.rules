rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only access their own folder syncs
    match /folderSyncs/{syncId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Users can only access their own collections, but public collections are readable by anyone
    match /collections/{collectionId} {
      allow read: if (request.auth != null && 
        request.auth.uid == resource.data.userId) || 
        resource.data.isPublic == true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Users can only access their own playlists, but public playlists are readable by anyone
    match /playlists/{playlistId} {
      allow read: if (request.auth != null && 
        request.auth.uid == resource.data.userId) || 
        resource.data.isPublic == true;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Users can only access their own tracks
    match /tracks/{trackId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Users can only access their own track sync status
    match /trackSyncs/{syncId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }

    // Public configuration documents (readable by everyone)
    match /config/{configId} {
      allow read: if true; // Allow anonymous reading of public config
      allow write: if request.auth != null; // Only authenticated users can write
    }

    // Deny access to all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
